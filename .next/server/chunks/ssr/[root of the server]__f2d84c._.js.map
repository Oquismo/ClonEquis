{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/components/auth-button-client.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthButton() from the server but AuthButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/auth-button-client.tsx <module evaluation>\",\n    \"AuthButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2EACA"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/components/auth-button-client.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthButton() from the server but AuthButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/auth-button-client.tsx\",\n    \"AuthButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uDACA"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/components/auth-button-server.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createServerComponentClient } from \"@supabase/auth-helpers-nextjs\";\r\nimport { cookies } from \"next/headers\";\r\nimport { AuthButton } from './auth-button-client';\r\n\r\n// Componente AuthButtonServer que se ejecuta en el servidor\r\nexport async function AuthButtonServer() {\r\n  // Crea una instancia del cliente de Supabase para el servidor\r\n  const supabase = createServerComponentClient({ cookies });\r\n\r\n  // Obtiene la sesión actual del usuario\r\n  const { data: { session } } = await supabase.auth.getSession();\r\n\r\n  // Renderiza el componente AuthButton pasando la sesión como prop\r\n  return <AuthButton session={session} />;\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAGO,eAAe;IACpB,8DAA8D;IAC9D,MAAM,WAAW,CAAA,GAAA,wKAAA,CAAA,8BAA2B,AAAD,EAAE;QAAE,SAAA,+HAAA,CAAA,UAAO;IAAC;IAEvD,uCAAuC;IACvC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAE5D,iEAAiE;IACjE,qBAAO,8OAAC,qJAAA,CAAA,aAAU;QAAC,SAAS;;;;;;AAC9B"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/components/post-card.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/post-card.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/post-card.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/components/post-card.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/post-card.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/post-card.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/components/post-list.tsx"],"sourcesContent":["import PostCard from \"./post-card\"\r\n\r\n// Define el tipo 'post' si no está definido en otro lugar\r\ntype User = {\r\n  user_name: string;\r\n  name: string;\r\n  avatar_url: string;\r\n};\r\n\r\ntype Post = {\r\n  id: string;\r\n  user: User;\r\n  content: string;\r\n};\r\n\r\nexport function PostList ({ posts }: { posts: Post[] }) {\r\n    return (\r\n        <>\r\n        {\r\n          posts?.map(post => {\r\n            const {\r\n              id,\r\n              user,\r\n              content,\r\n            } = post;\r\n            const {\r\n              user_name: userName,\r\n              name: userFullName,\r\n              avatar_url: avatarUrl,\r\n            } = user;\r\n            return (\r\n              <PostCard \r\n                content={content}\r\n                key={id} \r\n                userName={userName} \r\n                userFullName={userFullName} \r\n                avatar_url={avatarUrl}\r\n              />\r\n            );\r\n          })\r\n        }\r\n        </>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAeO,SAAS,SAAU,EAAE,KAAK,EAAqB;IAClD,qBACI;kBAEE,OAAO,IAAI,CAAA;YACT,MAAM,EACJ,EAAE,EACF,IAAI,EACJ,OAAO,EACR,GAAG;YACJ,MAAM,EACJ,WAAW,QAAQ,EACnB,MAAM,YAAY,EAClB,YAAY,SAAS,EACtB,GAAG;YACJ,qBACE,8OAAC,yIAAA,CAAA,UAAQ;gBACP,SAAS;gBAET,UAAU;gBACV,cAAc;gBACd,YAAY;eAHP;;;;;QAMX;;AAIV"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Romolo/Documents/Proyectos/ClonEquis/src/app/page.tsx"],"sourcesContent":["import { createServerComponentClient } from \"@supabase/auth-helpers-nextjs\";\r\nimport { cookies } from \"next/headers\";\r\nimport { AuthButtonServer } from \"@/app/components/auth-button-server\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nimport { PostList } from \"./components/post-list\";\r\n\r\n\r\nexport default async function Home() {\r\n  const supabase = createServerComponentClient({ cookies });\r\n  const {\r\n    data: { session },\r\n  } = await supabase.auth.getSession();\r\n\r\n  if (session === null) {\r\n    redirect(\"/login\");\r\n  }\r\n\r\n  const { data: posts } = await supabase\r\n  .from(\"posts\")\r\n  .select(\"*, user:users(name, avatar_url, user_name)\");\r\n\r\n  return (\r\n    <main className=\"flex min-h-screen flex-col items-center justify-between \">\r\n      <section className=\"max-w-[600px] mx-auto border-l border-r border-white/30 h-full min-h-screen\">\r\n        <AuthButtonServer />\r\n        <PostList posts={posts ?? []} />\r\n      </section>\r\n      <main className=\"mt-4 items-center justify-between\">\r\n      </main>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;AAFA;;;;;;;AAKe,eAAe;IAC5B,MAAM,WAAW,CAAA,GAAA,wKAAA,CAAA,8BAA2B,AAAD,EAAE;QAAE,SAAA,+HAAA,CAAA,UAAO;IAAC;IACvD,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAElC,IAAI,YAAY,MAAM;QACpB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,SAC7B,IAAI,CAAC,SACL,MAAM,CAAC;IAER,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC,qJAAA,CAAA,mBAAgB;;;;;kCACjB,8OAAC,yIAAA,CAAA,WAAQ;wBAAC,OAAO,SAAS,EAAE;;;;;;;;;;;;0BAE9B,8OAAC;gBAAK,WAAU;;;;;;;;;;;;AAItB"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}